services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring-ai-app
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/your_database
      - SPRING_DATASOURCE_USERNAME=username
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_AI_OPENAI_API-KEY=sk...
      - SPRING_AI_OPENAI_CHAT_OPTIONS_MODEL=gpt-3.5-turbo
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: postgres:14
    container_name: spring-ai-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=your_database
      - POSTGRES_USER=username
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./spring_ai_init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:

